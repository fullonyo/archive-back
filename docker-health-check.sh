#!/bin/bash

# =================================
# Script de Verifica√ß√£o do Docker
# =================================

echo "üîç Verificando configura√ß√£o do Docker para VRCHIEVE Backend..."
echo "============================================================="

# Verificar se Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n√£o est√° instalado!"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n√£o est√° instalado!"
    exit 1
fi

echo "‚úÖ Docker e Docker Compose est√£o instalados"

# Verificar arquivos de configura√ß√£o
FILES_TO_CHECK=(
    "docker-compose.yml"
    "docker-compose.prod.yml"
    "Dockerfile"
    ".env.example"
    "package.json"
    "server.js"
    "prisma/schema.prisma"
)

echo ""
echo "üìÇ Verificando arquivos de configura√ß√£o:"
for file in "${FILES_TO_CHECK[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file - FALTANDO!"
    fi
done

# Verificar se existe .env
echo ""
if [ -f ".env" ]; then
    echo "‚úÖ Arquivo .env encontrado"
    echo "‚ö†Ô∏è  Certifique-se de que todas as vari√°veis necess√°rias est√£o configuradas"
else
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado!"
    echo "üìù Copie .env.example para .env e configure as vari√°veis:"
    echo "   cp .env.example .env"
fi

# Testar sintaxe do docker-compose
echo ""
echo "üîç Verificando sintaxe dos arquivos Docker Compose..."

if docker-compose -f docker-compose.yml config &> /dev/null; then
    echo "‚úÖ docker-compose.yml - Sintaxe OK"
else
    echo "‚ùå docker-compose.yml - Erro de sintaxe!"
    docker-compose -f docker-compose.yml config
fi

if docker-compose -f docker-compose.yml -f docker-compose.prod.yml config &> /dev/null; then
    echo "‚úÖ docker-compose.prod.yml - Sintaxe OK"
else
    echo "‚ùå docker-compose.prod.yml - Erro de sintaxe!"
    docker-compose -f docker-compose.yml -f docker-compose.prod.yml config
fi

# Verificar portas
echo ""
echo "üîç Verificando se as portas est√£o livres..."

PORTS_TO_CHECK=(80 443 3001 6379 8080 8081 9229)

for port in "${PORTS_TO_CHECK[@]}"; do
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
        echo "‚ö†Ô∏è  Porta $port est√° em uso"
    else
        echo "‚úÖ Porta $port est√° livre"
    fi
done

# Comandos √∫teis
echo ""
echo "üìã Comandos √∫teis:"
echo "============================================================="
echo "# Desenvolvimento:"
echo "docker-compose up --build"
echo ""
echo "# Produ√ß√£o:"
echo "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build"
echo ""
echo "# Ver logs:"
echo "docker-compose logs -f backend"
echo "docker-compose logs -f nginx"
echo "docker-compose logs -f redis"
echo ""
echo "# Parar tudo:"
echo "docker-compose down"
echo ""
echo "# Limpar tudo:"
echo "docker-compose down -v --remove-orphans"
echo "docker system prune -f"

echo ""
echo "üéâ Verifica√ß√£o conclu√≠da!"