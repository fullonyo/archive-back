#!/bin/bash
# Script para configurar Let's Encrypt em produ√ß√£o

set -e

DOMAIN=$1
EMAIL=$2

if [ -z "$DOMAIN" ] || [ -z "$EMAIL" ]; then
    echo "‚ùå Uso: $0 <domain> <email>"
    echo "   Exemplo: $0 vrchieve.com admin@vrchieve.com"
    exit 1
fi

echo "üîí Configurando SSL para $DOMAIN com Let's Encrypt..."

# Criar diret√≥rios necess√°rios
mkdir -p letsencrypt
mkdir -p certbot-webroot

# Primeira execu√ß√£o do Certbot (staging para teste)
echo "üß™ Testando com certificado staging..."
docker-compose -f docker-compose.yml -f docker-compose.ssl.yml run --rm \
  certbot certonly --webroot \
  --webroot-path=/var/www/certbot \
  --email $EMAIL \
  --agree-tos \
  --no-eff-email \
  --staging \
  -d $DOMAIN \
  -d www.$DOMAIN

if [ $? -eq 0 ]; then
    echo "‚úÖ Teste com staging bem-sucedido!"
    
    # Perguntar se quer continuar com certificado real
    read -p "üöÄ Gerar certificado de produ√ß√£o? (y/N): " -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "üîê Gerando certificado de produ√ß√£o..."
        
        # Remover certificado staging
        docker-compose -f docker-compose.yml -f docker-compose.ssl.yml run --rm \
          certbot delete --cert-name $DOMAIN
        
        # Gerar certificado de produ√ß√£o
        docker-compose -f docker-compose.yml -f docker-compose.ssl.yml run --rm \
          certbot certonly --webroot \
          --webroot-path=/var/www/certbot \
          --email $EMAIL \
          --agree-tos \
          --no-eff-email \
          -d $DOMAIN \
          -d www.$DOMAIN
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ Certificado SSL gerado com sucesso!"
            echo "üîÑ Reiniciando Nginx para aplicar o certificado..."
            docker-compose restart nginx
            
            echo "üéâ SSL configurado com sucesso para $DOMAIN"
            echo "   Verifique: https://$DOMAIN/health"
        else
            echo "‚ùå Erro ao gerar certificado de produ√ß√£o"
            exit 1
        fi
    fi
else
    echo "‚ùå Erro no teste staging. Verifique a configura√ß√£o DNS."
    exit 1
fi

# Configurar renova√ß√£o autom√°tica
echo "‚è∞ Configurando renova√ß√£o autom√°tica..."
(crontab -l 2>/dev/null; echo "0 12 * * * cd $(pwd)/.. && docker-compose -f docker-compose.yml -f docker-compose.ssl.yml run --rm certbot renew --quiet") | crontab -

echo "‚úÖ Renova√ß√£o autom√°tica configurada (diariamente √†s 12:00)"