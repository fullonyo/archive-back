# Configuração do servidor VRCHIEVE para produção# Configuração do servidor VRCHIEVE para produção

server        proxy_pass http://vrchieve_backend/api/auth;

upstream vrchieve_backend {        proxy_set_header Host $host;

    server backend:3001;        proxy_set_header X-Real-IP $remote_addr;

    keepalive 32;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

}        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Authorization $http_authorization;  listen         proxy_pass http://vrchieve_backend/api/assets;

# Redirect HTTP para HTTPS        proxy_set_header Host $host;

server {        proxy_set_header X-Real-IP $remote_addr;

    listen 80;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    server_name your-domain.com www.your-domain.com;        proxy_set_header X-Forwarded-Proto $scheme;    server_name your-domain.com www.your-domain.com;

    

    # Para Let's Encrypt challenge    # Redirect HTTP para HTTPS

    location /.well-known/acme-challenge/ {    return 301 https://$server_name$request_uri;

        root /var/www/certbot;}

    }

    server {

    location / {    listen 443 ssl http2;

        return 301 https://$server_name$request_uri;    server_name your-domain.com www.your-domain.com;

    }

}    # Certificados SSL (configurar com Let's Encrypt ou certificados próprios)

    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;

# Servidor HTTPS principal    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;

server {

    listen 443 ssl http2;    # Configurações SSL seguras

    server_name your-domain.com www.your-domain.com;    ssl_protocols TLSv1.2 TLSv1.3;

    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;

    # Certificados SSL (configurar com Let's Encrypt)    ssl_prefer_server_ciphers off;

    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;    ssl_session_cache shared:SSL:10m;

    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;    ssl_session_timeout 10m;



    # Configurações SSL seguras    # HSTS

    ssl_protocols TLSv1.2 TLSv1.3;    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;    

    ssl_prefer_server_ciphers off;    # Security headers

    ssl_session_cache shared:SSL:10m;    add_header X-Frame-Options DENY always;

    ssl_session_timeout 10m;    add_header X-Content-Type-Options nosniff always;

    add_header X-XSS-Protection "1; mode=block" always;

    # HSTS    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss:; media-src 'self'; object-src 'none'; child-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    

    # Security headers    # Configurações de upload e timeout

    add_header X-Frame-Options DENY always;    client_max_body_size 100M;

    add_header X-Content-Type-Options nosniff always;    proxy_connect_timeout 60s;

    add_header X-XSS-Protection "1; mode=block" always;    proxy_send_timeout 300s;

    add_header Referrer-Policy "strict-origin-when-cross-origin" always;    proxy_read_timeout 300s;



    # Configurações de upload e timeout    # Health check endpoint

    client_max_body_size 100M;    location /health {

    proxy_connect_timeout 60s;        proxy_pass http://vrchieve_backend/health;

    proxy_send_timeout 300s;        proxy_set_header Host $host;

    proxy_read_timeout 300s;        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Health check endpoint        proxy_set_header X-Forwarded-Proto $scheme;

    location /health {        

        proxy_pass http://vrchieve_backend/health;        # Monitoring headers

        proxy_set_header Host $host;        add_header X-Backend-Server $upstream_addr always;

        proxy_set_header X-Real-IP $remote_addr;        add_header X-Response-Time $upstream_response_time always;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    }

        proxy_set_header X-Forwarded-Proto $scheme;

            # API endpoints com rate limiting mais restritivo

        add_header X-Backend-Server $upstream_addr always;    location /api/auth {

        add_header X-Response-Time $upstream_response_time always;        limit_req zone=auth burst=5 nodelay;

    }        

        proxy_pass http://vrchieve_backend/api/auth;

    # API endpoints com rate limiting        proxy_set_header Host $host;

    location /api/auth {        proxy_set_header X-Real-IP $remote_addr;

        limit_req zone=auth burst=5 nodelay;        proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                proxy_Set_header X-Forwarded-Proto $scheme;

        proxy_pass http://vrchieve_backend/api/auth;        proxy_Set_header Authorization $http_authorization;

        proxy_set_header Host $host;        

        proxy_set_header X-Real-IP $remote_addr;        # Log detalhado para autenticação

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        access_log /var/log/nginx/vrchieve_auth.log json_combined;

        proxy_set_header X-Forwarded-Proto $scheme;    }

        proxy_set_header Authorization $http_authorization;

            # Assets com cache otimizado

        access_log /var/log/nginx/vrchieve_auth.log combined;    location /api/assets {

    }        limit_req zone=assets burst=20 nodelay;

        

    # Assets com cache otimizado        proxy_pass http://vrchieve_backend/api/assets;

    location /api/assets {        proxy_set_header Host $host;

        limit_req zone=assets burst=20 nodelay;        proxy_set_header X-Real-IP $remote_addr;

                proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://vrchieve_backend/api/assets;        proxy_Set_header X-Forwarded-Proto $scheme;

        proxy_set_header Host $host;

        proxy_set_header X-Real-IP $remote_addr;        # Cache agressivo para produção (30 minutos)

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_cache_valid 200 30m;

        proxy_set_header X-Forwarded-Proto $scheme;        proxy_cache_valid 404 1m;

        proxy_cache_key $scheme$request_method$host$request_uri$query_string;

        # Cache para produção (30 minutos)        add_header X-Cache-Status $upstream_cache_status always;

        proxy_cache_valid 200 30m;    }

        proxy_cache_valid 404 1m;

        add_header X-Cache-Status $upstream_cache_status always;    # Imagens com cache de longa duração

    }    location /api/images {

        limit_req zone=assets burst=100 nodelay;

    # Imagens com cache de longa duração        

    location /api/images {        proxy_pass http://vrchieve_backend/api/images;

        limit_req zone=assets burst=100 nodelay;        proxy_set_header Host $host;

                proxy_set_header X-Real-IP $remote_addr;

        proxy_pass http://vrchieve_backend/api/images;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Host $host;        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        # Cache muito longo para imagens (24 horas)

        proxy_set_header X-Forwarded-Proto $scheme;        proxy_cache_valid 200 24h;

        proxy_cache_valid 404 5m;

        # Cache muito longo para imagens (24 horas)        proxy_cache_key $scheme$request_method$host$request_uri;

        proxy_cache_valid 200 24h;        add_header X-Cache-Status $upstream_cache_status always;

        proxy_cache_valid 404 5m;        

        add_header X-Cache-Status $upstream_cache_status always;        # Headers de cache para o browser (7 dias)

        add_header Cache-Control "public, max-age=604800, immutable";        add_header Cache-Control "public, max-age=604800, immutable";

    }    }



    # Admin endpoints com segurança extra    # Admin endpoints com autenticação extra

    location /api/admin {    location /api/admin {

        limit_req zone=auth burst=2 nodelay;        # Rate limiting muito restritivo para admin

                limit_req zone=auth burst=2 nodelay;

        proxy_pass http://vrchieve_backend/api/admin;        

        proxy_set_header Host $host;        # Apenas IPs específicos (configurar conforme necessário)

        proxy_set_header X-Real-IP $remote_addr;        # allow 203.0.113.0/24;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        # deny all;

        proxy_Set_header X-Forwarded-Proto $scheme;        

        proxy_set_header Authorization $http_authorization;        proxy_pass http://vrchieve_backend/api/admin;

                proxy_set_header Host $host;

        access_log /var/log/nginx/vrchieve_admin.log combined;        proxy_set_header X-Real-IP $remote_addr;

    }        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header X-Forwarded-Proto $scheme;

    # Todos os outros endpoints da API        proxy_set_header Authorization $http_authorization;

    location /api/ {        

        limit_req zone=api burst=10 nodelay;        # Log detalhado para admin

                access_log /var/log/nginx/vrchieve_admin.log json_combined;

        proxy_pass http://vrchieve_backend/api/;    }

        proxy_set_header Host $host;

        proxy_set_header X-Real-IP $remote_addr;    # Todos os outros endpoints da API

        proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;    location /api/ {

        proxy_Set_header X-Forwarded-Proto $scheme;        limit_req zone=api burst=10 nodelay;

        proxy_set_header Authorization $http_authorization;        

                proxy_pass http://vrchieve_backend/api/;

        # WebSocket support        proxy_set_header Host $host;

        proxy_http_version 1.1;        proxy_set_header X-Real-IP $remote_addr;

        proxy_Set_header Upgrade $http_upgrade;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_Set_header Connection "upgrade";        proxy_set_header X-Forwarded-Proto $scheme;

    }        proxy_set_header Authorization $http_authorization;

        

    # CDN estático        # WebSocket support

    location /cdn/ {        proxy_http_version 1.1;

        alias /var/www/cdn-cache/;        proxy_set_header Upgrade $http_upgrade;

        expires 7d;        proxy_set_header Connection "upgrade";

        add_header Cache-Control "public, max-age=604800, immutable";    }

        add_header X-Served-By "nginx-cdn";

            # CDN estático otimizado para produção

        try_files $uri @backend_cdn;    location /cdn/ {

    }        alias /var/www/cdn-cache/;

        expires 7d;

    location @backend_cdn {        add_header Cache-Control "public, max-age=604800, immutable";

        proxy_pass http://vrchieve_backend;        add_header X-Served-By "nginx-cdn";

        proxy_Set_header Host $host;        

        proxy_Set_header X-Real-IP $remote_addr;        # Compressão adicional

        proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;        gzip_static on;

        proxy_Set_header X-Forwarded-Proto $scheme;        

    }        # Fallback para o backend

        try_files $uri @backend_cdn;

    # Bloquear acesso a arquivos sensíveis    }

    location ~ /\. {

        deny all;    location @backend_cdn {

    }        proxy_pass http://vrchieve_backend;

        proxy_set_header Host $host;

    location ~ \.(env|config|sql|log)$ {        proxy_set_header X-Real-IP $remote_addr;

        deny all;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    }        proxy_set_header X-Forwarded-Proto $scheme;

    }

    # Logs de produção

    access_log /var/log/nginx/vrchieve_access.log combined;    # Bloquear acesso a arquivos sensíveis

    error_log /var/log/nginx/vrchieve_error.log;    location ~ /\. {

}        deny all;
    }

    location ~ \.(env|config|sql|log)$ {
        deny all;
    }

    # Logs de produção
    access_log /var/log/nginx/vrchieve_prod_access.log json_combined;
    error_log /var/log/nginx/vrchieve_prod_error.log;
}